@model IEnumerable<MVCWebApplication.Models.Address>
    @{
        
        ViewBag.Title = "Index";

    }

    
<script>
        var map;

        function initialize() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                center: new google.maps.LatLng(43.0167, -88, 0070),

            });


            @foreach(var item in Model)
            {
                <text>
            var latlng = new google.maps.LatLng(('@item.Latitude'), ('@item.Longitude'));
            var marker = new google.maps.Marker({
                position: latlng,
                map: map
            })
            </text>
            }

            // Create the search box and link it to the UI element.
            var input = document.getElementById('pac-input');
            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.LEFT_TOP].push(input);

            // Bias the SearchBox results towards current map's viewport.
            map.addListener('bounds_changed', function() {
                searchBox.setBounds(map.getBounds());
            });

        }

</script>

   



<div id = "map"></div>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDSUoZb1G7FkVWD_qBzlVhRhxvftCiTPQ4&v=3&callback=initMap">
    </script>



