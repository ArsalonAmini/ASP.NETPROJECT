@model IEnumerable<MVCWebApplication.Models.Address>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Street)
        </th>
        <th></th>
    </tr>


@foreach (var item in Model) {
    <tr>
       
        <td>
            @Html.DisplayFor(modelItem => item.Street)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.id }) |
            @Html.ActionLink("Details", "Details", new { id=item.id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.id })
        </td>

    </tr>
    
}

    
</table>

<div id="map" style="height: 500px"></div>
<script>
    function addMarker(location) {
        var marker = new google.maps.Marker({
            draggable: true,
            animation: google.maps.Animation.DROP,
            position: location,
            title: 'Bomb',
            map: map,
            icon: bomb
        });
        markersArray.push(marker);
    }
      var map;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: new google.maps.LatLng(43.0167, -88, 0070),
          zoom: 10
        });
      }
    @foreach(var item in Model)
      {
          <text>
             markersArray.push(new google.maps.Marker({
                 draggable: true,
                 animation: google.maps.Animation.DROP,
                 position: new google.maps.LatLng('@item.Latitude', '@item.Longitude', false),
                 title: 'Whatever title',
                 map: _map
             }));
         </text>
      }
</script>
<script>
        //var map;

        //function initMap() {
        //    map = new google.maps.Map(document.getElementById('map'), {
        //        zoom: 10,
        //        center: new google.maps.LatLng(43.0167, -88, 0070),

        //    });


            @foreach(var item in Model)
            {
                <text>
            var latlng = new google.maps.LatLng(('@item.Latitude'), ('@item.Longitude'));
            var marker = new google.maps.Marker({
                position: latlng,
                map: map
            })
            </text>
            }

    
        

</script>



<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDSUoZb1G7FkVWD_qBzlVhRhxvftCiTPQ4&v=3&callback=initMap">
</script>
